<f:template name="testTemplate"
	xmlns:f="http://www.worldmerge.com/2008/xsl"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:svg="http://www.w3.org/2000/svg">
	
	<f:param name="width" type="Number" />
	<f:param name="height" type="Number" />
	
	<f:param name="duration" type="Number" />
	
	<f:thunk with-template="$draw">
		<f:with-param name="denoms">
			<denoms>
				<d d=".0001" />
				<d d=".0005" />
				<d d=".001" />
				<d d=".005" />
				<d d=".01" />
				<d d=".05" />
				<d d=".1" />
				<d d=".5" />
				<d d="1" />
				<d d="5" />
				<d d="10" />
				<d d="30" />
				<d d="60" />
				<d d="300" />
				<d d="600" />
				<d d="1800" />
				<d d="3600" />
				<d d="18000" />
				<d d="36000" />
			</denoms>
		</f:with-param>
	</f:thunk>
	
	<f:template name="draw">
		<f:param name="denoms" type="XML" />
		
		<xsl:variable name="minspacing" select="150" />
		
		<html:div>
			<xsl:variable name="mininc" select="$duration/@value div ($width/@value div $minspacing)" />
			<xsl:variable name="rulerinc" select="$denoms/*/*[@d &gt; $mininc][1]" />
			<xsl:variable name="notchinc" select="$rulerinc/preceding-sibling::*[2]/@d" />
			
			<xsl:call-template name="rulernotch">
				<xsl:with-param name="timestep" select="0" />
				<xsl:with-param name="pos" select="0" />
				<xsl:with-param name="maxpos" select="$width/@value" />
				<xsl:with-param name="timeinc" select="$notchinc" />
				<xsl:with-param name="posinc" select="$notchinc * ($width/@value div $duration/@value)" />
				<xsl:with-param name="intervals" select="$rulerinc | $rulerinc/preceding-sibling::*[position() &lt; 3]" />
			</xsl:call-template>
		</html:div>
		
		
		<xsl:template name="rulernotch">
			<xsl:param name="timestep" />
			<xsl:param name="pos" />
			<xsl:param name="maxpos" />
			<xsl:param name="timeinc" />
			<xsl:param name="posinc" />
			<xsl:param name="intervals" />

			<xsl:if test="$pos &lt; $maxpos">
				<html:div class="{concat('ruler-notch-',count($intervals) + 1 - count($intervals[$timestep mod round(@d div $timeinc) = 0]))}"
					style="left: {round($pos)}px;">
					<xsl:if test="count($intervals) = count($intervals[$timestep mod round(@d div $timeinc) = 0])">
						<html:div class="rulerMarking">
							<xsl:call-template name="rulermarking">
								<xsl:with-param name="t" select="$timestep * $timeinc" />
							</xsl:call-template>
						</html:div>

					</xsl:if>
				</html:div>

				<xsl:call-template name="rulernotch">
					<xsl:with-param name="timestep" select="$timestep+1" />
					<xsl:with-param name="pos" select="$pos+$posinc" />
					<xsl:with-param name="maxpos" select="$maxpos" />
					<xsl:with-param name="timeinc" select="$timeinc" />
					<xsl:with-param name="posinc" select="$posinc" />
					<xsl:with-param name="intervals" select="$intervals" />
				</xsl:call-template>
			</xsl:if>
		</xsl:template>

		<xsl:template name="rulermarking">
			<xsl:param name="t" />

			<xsl:variable name="h" select="floor($t div 3600)" />
			<xsl:variable name="m" select="floor(($t mod 3600) div 60)" />
			<xsl:variable name="s" select="floor(($t mod 60))" />

			<xsl:if test="$h &gt; 0">
				<xsl:value-of select="$h" />
				<xsl:text>:</xsl:text>
				<xsl:if test="$m &lt; 10">
					<xsl:text>0</xsl:text>
				</xsl:if>
			</xsl:if>
			<xsl:value-of select="$m" />
			<xsl:text>:</xsl:text>
			<xsl:if test="$s &lt; 10">
				<xsl:text>0</xsl:text>
			</xsl:if>
			<xsl:value-of select="$s" />

		</xsl:template>
	</f:template>

	
</f:template>