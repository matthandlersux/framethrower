<f:template name="testTemplate"
	xmlns:f="http://www.worldmerge.com/2008/xsl"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:svg="http://www.w3.org/2000/svg">
	
	<f:param name="pane" type="UI.pane.pane" />
	<f:param name="closePane" type="Unit JS" />
	<f:param name="newPane" type="a -> Unit JS" />
	<f:param name="width" type="Number" />
	<f:param name="height" type="Number" />
	
	<f:derive name="tab" d="UI.pane.pane:tab pane" />
	<f:derive name="focus" d="UI.pane.pane:focus pane" />
	
	<!-- <f:derive name="focustype" d="bindSet (getOntProp shared.isA) (returnUnitSet focus)" /> -->
	<f:derive name="focustype" d="mapUnit getTypesMap focus" />
	
	<f:derive name="typeDisplay" d="UI.prefs:typeDisplay ui.prefs" />
	
	<f:derive name="propertiesState" d="UI.pane.pane:propertiesState pane" />

	<f:include url="/xml/util/typeColor.xml" />

	<f:each select="$focus">
		<xsl:variable name="tab" select="$tab/*" /> <!-- TODO fix this -->
		
		<xsl:variable name="color">
			<xsl:call-template name="typeColor">
				<xsl:with-param name="typeNames" select="$focustype/f:map/f:entry/f:value/f:set/f:o/@name" />
				<xsl:with-param name="typeDisplay" select="$typeDisplay" />
			</xsl:call-template>
		</xsl:variable>
		
		<html:div class="pane">
			<xsl:attribute name="style">
				width: <xsl:value-of select="$width/@value" />px;
				height: <xsl:value-of select="$height/@value" />px;
			</xsl:attribute>
			<html:div class="titlebar">
				<html:div class="titlebar-focus">
					<f:thunk url="../view2/viewPlus.xml">
						<f:with-param name="focus" select="$focus" />
						<f:with-param name="extra" select="$blankTemplate" />
					</f:thunk>
				</html:div>
				<html:div class="titlebar-buttons">
					<html:div class="titlebar-close">
						<f:on event="click" with-action="$closePane" />
					</html:div>
				</html:div>
			
				<html:div class="tabs">
					<xsl:if test="$focustype/f:map/f:entry/f:value/f:set/f:o/@name = 'shared.type.situation'">
						<html:div class="tab">
							<xsl:if test="$tab/@value = 'objectsIn'">
								<xsl:attribute name="selected">true</xsl:attribute>
							</xsl:if>
							<f:on event="click" with-action="$selectTab">
								<f:with-param name="tab" select="'objectsIn'" />
							</f:on>
							<html:div class="tab-children">
								Children
								<f:thunk with-template="$childCount">
									<f:with-param name="focus" select="$focus" />
								</f:thunk>
							</html:div>
						</html:div>
						<html:div class="tab">
							<xsl:if test="$tab/@value = 'infonsIn'">
								<xsl:attribute name="selected">true</xsl:attribute>
							</xsl:if>
							<f:on event="click" with-action="$selectTab">
								<f:with-param name="tab" select="'infonsIn'" />
							</f:on>
							<html:div class="tab-infonsIn">
								<html:div class="icon">
									<xsl:attribute name="style">background-color: <xsl:value-of select="$color" /></xsl:attribute>
								</html:div>
								Infons in
								<f:thunk with-template="$infonCount">
									<f:with-param name="focus" select="$focus" />
								</f:thunk>
							</html:div>
						</html:div>
					</xsl:if>
					<html:div class="tab">
						<xsl:if test="$tab/@value = 'about'">
							<xsl:attribute name="selected">true</xsl:attribute>
						</xsl:if>
						<f:on event="click" with-action="$selectTab">
							<f:with-param name="tab" select="'about'" />
						</f:on>
						<html:div class="tab-about">
							<html:div class="icon">
								<xsl:attribute name="style">background-color: <xsl:value-of select="$color" /></xsl:attribute>
							</html:div>
							About
							<f:thunk with-template="$aboutCount">
								<f:with-param name="focus" select="$focus" />
							</f:thunk>
						</html:div>
					</html:div>
					<html:div class="tab">
						<xsl:if test="$tab/@value = 'properties'">
							<xsl:attribute name="selected">true</xsl:attribute>
						</xsl:if>
						<f:on event="click" with-action="$selectTab">
							<f:with-param name="tab" select="'properties'" />
						</f:on>
						<html:div class="tab-artifacts">
							Artifacts
						</html:div>
					</html:div>
				</html:div>
			
			</html:div>
		
		

			<html:div class="pane-content">
				<xsl:choose>
					<xsl:when test="$tab/@value = 'objectsIn'">
						<f:thunk url="objectsIn.xml">
							<f:with-param name="focus" select="$focus" />
							<f:with-param name="pane" select="$pane" />
							<f:with-param name="newPane" select="$newPane" />
						</f:thunk>
					</xsl:when>
					<xsl:when test="$tab/@value = 'infonsIn'">
						<f:thunk url="infonsIn.xml">
							<f:with-param name="focus" select="$focus" />
							<f:with-param name="newPane" select="$newPane" />
							<f:with-param name="pane" select="$pane" />
						</f:thunk>
					</xsl:when>
					<xsl:when test="$tab/@value = 'about'">
						<f:thunk url="about.xml">
							<f:with-param name="focus" select="$focus" />
							<f:with-param name="newPane" select="$newPane" />
							<f:with-param name="pane" select="$pane" />
						</f:thunk>
					</xsl:when>
					<xsl:when test="$tab/@value = 'properties'">
						<f:each select="$propertiesState">
							<f:thunk url="properties.xml">
								<f:with-param name="focus" select="$focus" />
								<f:with-param name="propertiesState" select="$propertiesState" />
							</f:thunk>
						</f:each>
					</xsl:when>
					<xsl:otherwise>
	
					</xsl:otherwise>
				</xsl:choose>
			</html:div>
			
		</html:div>
	</f:each>
	
	<f:action name="selectTab">
		<f:param name="tab" type="String" />
		
		<f:intact object="$pane" action="add" property="tab" key="$tab" />
	</f:action>
	
	<f:template name="childCount">
		<f:param name="focus" type="Object" />
		<f:derive name="count" d="length (getObjectsIn focus)" />
		<f:each select="$count">
			<html:span>
				(<xsl:value-of select="$count/@value" />)
			</html:span>
		</f:each>
	</f:template>

	<f:template name="infonCount">
		<f:param name="focus" type="Object" />
		<f:derive name="count" d="length (getInfonsIn focus)" />
		<f:each select="$count">
			<html:span>
				(<xsl:value-of select="$count/@value" />)
			</html:span>
		</f:each>
	</f:template>
	
	<f:template name="aboutCount">
		<f:param name="focus" type="Object" />
		<f:derive name="count" d="length (getInfonsAbout focus)" />
		<f:each select="$count">
			<html:span>
				(<xsl:value-of select="$count/@value" />)
			</html:span>
		</f:each>
	</f:template>
	
	<f:template name="blankTemplate">
		<f:param name="focus" type="Object" />
	</f:template>
	
	<f:include url="/xml/util/ord.xml" />
	<!-- <f:include url="/xml/debug/prettyPrint.xml" /> -->
</f:template>