<f:function
	xmlns:f="http://www.filmsfolded.com/xsl/ui"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:svg="http://www.w3.org/2000/svg">

	<f:param name="zui" />
	<f:param name="focus" />
	<f:param name="parentZui" />
	<f:derived name="properties" from="zui">
		<get what="properties" />
	</f:derived>
	
	<xsl:template>
		<xsl:variable name="expanded" select="$zui and $properties/@expanded='1'" />
		<xsl:variable name="expandedTF">
			<xsl:choose>
				<xsl:when test="$expanded">true</xsl:when>
				<xsl:otherwise>false</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		
		<html:div class="zui" expanded="{$expandedTF}">
			<f:binding url="bindings/zui.xml">
				<f:with-param name="parentZui"><xsl:copy-of select="$parentZui" /></f:with-param>
				<f:with-param name="zui"><xsl:copy-of select="$zui" /></f:with-param>
				<f:with-param name="focus"><xsl:copy-of select="$focus" /></f:with-param>
			</f:binding>
			
			<html:div class="zuiTitle">
				<f:button name="titleBar" />
				<f:thunk url="printContent.xml">
					<f:with-param name="focus"><xsl:copy-of select="$focus" /></f:with-param>
				</f:thunk>
			</html:div>
			
			<xsl:if test="$expanded">
				<f:thunk name="printChildren">
					<f:with-param name="zui"><xsl:copy-of select="$zui" /></f:with-param>
					<f:with-param name="focus"><xsl:copy-of select="$focus" /></f:with-param>
				</f:thunk>
			</xsl:if>
		</html:div>
	</xsl:template>
	
	
	<f:function name="printChildren">
		<f:param name="zui" />
		<f:param name="focus" />
		<f:derived name="situationChildren" from="focus">
			<get what="childObjects" />
			<filtertype type="kernel.situation" />
		</f:derived>
		<f:derived name="individualChildren" from="focus">
			<get what="childObjects" />
			<filtertype type="kernel.individual" />
		</f:derived>
		
		<xsl:template>
			<html:div>
				<html:div class="individualChildren">
					<xsl:for-each select="$individualChildren/*">
						<html:div>
							<f:thunk url="printContent.xml">
								<f:with-param name="focus"><xsl:copy-of select="." /></f:with-param>
							</f:thunk>
						</html:div>
					</xsl:for-each>
					<html:div style="color:purple">+ Add Entity</html:div>
				</html:div>
		
				<html:div class="zuiChildren">
					<xsl:for-each select="$situationChildren/*">
						<f:thunk name="printChildZui">
							<f:with-param name="zui"><xsl:copy-of select="$zui" /></f:with-param>
							<f:with-param name="child"><xsl:copy-of select="." /></f:with-param>
						</f:thunk>
					</xsl:for-each>
					<html:div style="color:green">+ Add Situation</html:div>
				</html:div>
				<html:div style="clear:both" />
			</html:div>
		</xsl:template>
	</f:function>
	
	
	<f:function name="printChildZui">
		<f:param name="zui" />
		<f:param name="child" />
		<f:derived name="childZui" from="zui">
			<get what="expandedChildren" />
			<filter>
				<get what="focus" />
				<equals>
					<start from="child" />
				</equals>
			</filter>
		</f:derived>
		
		<xsl:template>
			<xsl:variable name="expanded" select="$childZui/*" />
			<html:div>
				<xsl:choose>
					<xsl:when test="$expanded">
						<f:thunk url="zui.xml">
							<f:with-param name="parentZui"><xsl:copy-of select="$zui" /></f:with-param>
							<f:with-param name="zui"><xsl:copy-of select="$expanded" /></f:with-param>
							<f:with-param name="focus"><xsl:copy-of select="$child" /></f:with-param>
						</f:thunk>
					</xsl:when>
					<xsl:otherwise>
						<f:thunk url="zui.xml">
							<f:with-param name="parentZui"><xsl:copy-of select="$zui" /></f:with-param>
							<f:with-param name="focus"><xsl:copy-of select="$child" /></f:with-param>
						</f:thunk>
					</xsl:otherwise>
				</xsl:choose>
			</html:div>
		</xsl:template>
	</f:function>
	
	
</f:function>