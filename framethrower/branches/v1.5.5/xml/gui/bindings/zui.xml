<f:binding
	xmlns:f="http://www.filmsfolded.com/xsl/ui"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	
	<f:transaction name="Close" event="click" button="close">
		<f:param name="zui" />
		<f:derived name="parentZui" from="zui">
			<f:get what="parentZui" />
		</f:derived>

		<f:derived name="childZuis" from="parentZui">
			<f:get what="childZuis" />
		</f:derived>

		<f:derived name="leftChildInView" from="parentZui">
			<f:get what="leftChildInView" />
		</f:derived>		

		<f:derived name="childZuisMinimized" from="parentZui">
			<f:get what="childZuis" />
			<buildassoc what="minimized" />	
		</f:derived>
		
		<xsl:template>
			<xsl:variable name="openZuis" select="$childZuisMinimized/f:pair[f:value/f:bool/@value = 'false']" />
			<xsl:variable name="openZuiCount" select="count($openZuis)" />
			
			<f:transaction>
				<f:intact with-id="{$parentZui/@id}" prop="childZuis" action="remove">
					<f:with-param>
						<f:number>
							<xsl:attribute name="value">
								<xsl:for-each select="$childZuis/*">
									<xsl:if test="./@id = $zui/@id">
										<xsl:value-of select="count(preceding-sibling::*)" />
									</xsl:if>
								</xsl:for-each>
							</xsl:attribute>
						</f:number>
					</f:with-param>
				</f:intact>
				<f:intact with-id="{$parentZui/@id}" prop="maximizedChild" action="set">
					<f:with-param />
				</f:intact>
				
				
				<xsl:variable name="childWindow">
					<xsl:choose>
						<xsl:when test="$openZuiCount = 2 or $openZuiCount = 1 or $openZuiCount = 0">
							1
						</xsl:when>
						<xsl:otherwise>
							2
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				
				<xsl:if test="$leftChildInView/@value = ($openZuiCount - $childWindow)" >
					<f:intact with-id="{$parentZui/@id}" prop="leftChildInView" action="set">
						<f:with-param>
							<f:number value="{$leftChildInView/@value - ($childWindow - 1)}" />
						</f:with-param>
					</f:intact>
				</xsl:if>
			</f:transaction>
		</xsl:template>
	</f:transaction>
	
	<f:transaction name="Maximize" event="click" button="maximize">
		<f:param name="zui" />
		<f:derived name="parentZui" from="zui">
			<f:get what="parentZui" />
		</f:derived>
		<f:derived name="parentZuis" from="zui">
			<trace what="parentZui" />
		</f:derived>
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$parentZuis/*[1]/@id}" prop="maximizedChild" action="set">
					<f:with-param><xsl:copy-of select="$zui" /></f:with-param>
				</f:intact>
				<!-- <xsl:for-each select="$parentZuis/*[position() != last()]">
					<f:intact with-id="{following-sibling::*/@id}" prop="maximizedChild" action="set">
						<f:with-param><xsl:copy-of select="." /></f:with-param>
					</f:intact>
				</xsl:for-each> -->
			</f:transaction>
		</xsl:template>
	</f:transaction>
	
	<f:transaction name="Demaximize" event="click" button="titlebar">
		<f:param name="zui" />
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$zui/@id}" prop="maximizedChild" action="set">
					<f:with-param />
				</f:intact>
			</f:transaction>
		</xsl:template>
	</f:transaction>
	
	<f:transaction name="childrenSidebar" event="click" button="childrenSidebar">
		<f:param name="zui" />
		<f:derived name="properties" from="zui">
			<f:get what="properties" />
		</f:derived>
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$zui/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:choose>
							<xsl:when test="$properties/@childrenSidebar = '1'">
								<xsl:call-template name="changeAttribute">
									<xsl:with-param name="xml" select="$properties" />
									<xsl:with-param name="attributeName" select="'childrenSidebar'" />
									<xsl:with-param name="attributeValue" select="0" />
								</xsl:call-template>
							</xsl:when>
							<xsl:otherwise>
								<xsl:call-template name="changeAttribute">
									<xsl:with-param name="xml" select="$properties" />
									<xsl:with-param name="attributeName" select="'childrenSidebar'" />
									<xsl:with-param name="attributeValue" select="1" />
								</xsl:call-template>
							</xsl:otherwise>
						</xsl:choose>
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	
	<f:transaction name="correspondSidebar" event="click" button="correspondSidebar">
		<f:param name="zui" />
		<f:derived name="properties" from="zui">
			<f:get what="properties" />
		</f:derived>
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$zui/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:choose>
							<xsl:when test="$properties/@correspondSidebar = '1'">
								<xsl:call-template name="changeAttribute">
									<xsl:with-param name="xml" select="$properties" />
									<xsl:with-param name="attributeName" select="'correspondSidebar'" />
									<xsl:with-param name="attributeValue" select="0" />
								</xsl:call-template>
							</xsl:when>
							<xsl:otherwise>
								<xsl:call-template name="changeAttribute">
									<xsl:with-param name="xml" select="$properties" />
									<xsl:with-param name="attributeName" select="'correspondSidebar'" />
									<xsl:with-param name="attributeValue" select="1" />
								</xsl:call-template>
							</xsl:otherwise>
						</xsl:choose>
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	
	<f:transaction name="Situation View" event="click" button="situationView">
		<f:param name="zui" />
		<f:derived name="properties" from="zui">
			<f:get what="properties" />
		</f:derived>
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$zui/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'view'" />
							<xsl:with-param name="attributeValue" select="'situation'" />
						</xsl:call-template>
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	<f:transaction name="Object View" event="click" button="objectView">
		<f:param name="zui" />
		<f:derived name="properties" from="zui">
			<f:get what="properties" />
		</f:derived>
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$zui/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'view'" />
							<xsl:with-param name="attributeValue" select="'object'" />
						</xsl:call-template>
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	
	<f:transaction name="addChild" event="click" button="addChild">
		<f:param name="panelLayer" />
		<f:param name="zui" />
		<f:derived name="properties" from="panelLayer">
			<f:get what="properties" />
		</f:derived>
		<f:derived name="focus" from="zui">
			<f:get what="focus" />
		</f:derived>
		
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$panelLayer/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'addObject'" />
							<xsl:with-param name="attributeValue" select="1" />
						</xsl:call-template>
					</f:with-param>
				</f:intact>
				<f:intact with-id="{$panelLayer/@id}" prop="addFocus" action="set">
					<f:with-param>
						<xsl:copy-of select="$focus" />
					</f:with-param>
				</f:intact>				
			</f:transaction>			
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	
	
	<f:transaction name="addCorresponds" event="click" button="addCorresponds">
		<f:param name="panelLayer" />
		<f:param name="zui" />
		<f:derived name="properties" from="panelLayer">
			<f:get what="properties" />
		</f:derived>
		<f:derived name="focus" from="zui">
			<f:get what="focus" />
		</f:derived>
		
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$panelLayer/@id}" prop="properties" action="set">
					<f:with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'addCorresponds'" />
							<xsl:with-param name="attributeValue" select="1" />
						</xsl:call-template>
					</f:with-param>
				</f:intact>
				<f:intact with-id="{$panelLayer/@id}" prop="addFocus" action="set">
					<f:with-param>
						<xsl:copy-of select="$focus" />
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:value-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	
	<f:transaction name="addInfon" event="click" button="addInfon">
		<f:param name="panelLayer" />
		<f:param name="zui" />
		<f:derived name="focus" from="zui">
			<f:get what="focus" />
		</f:derived>
		
		<xsl:template>
			<f:transaction>
				<f:intact with-id="{$panelLayer/@id}" prop="addInfon" action="set">
					<f:with-param>
						<f:bool value="true" />
					</f:with-param>
				</f:intact>
				<f:intact with-id="{$panelLayer/@id}" prop="addFocus" action="set">
					<f:with-param>
						<xsl:copy-of select="$focus" />
					</f:with-param>
				</f:intact>
			</f:transaction>
		</xsl:template>
		
	</f:transaction>	
	
</f:binding>