<f:binding
	xmlns:f="http://www.filmsfolded.com/xsl/ui"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	
	<f:transaction name="Close" event="click" button="close">
		<f:param name="panelLayer" />
		<f:derived name="properties" from="panelLayer">
			<get what="properties" />
		</f:derived>
		<xsl:template>
			<transaction>
				<intact with-id="{$panelLayer/@id}" prop="properties" action="set">
					<with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'addInfon'" />
							<xsl:with-param name="attributeValue" select="0" />
						</xsl:call-template>
					</with-param>
				</intact>
			</transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:copy-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>
	</f:transaction>
	

	<f:transaction name="NameInput" event="blur" button="nameinput">
		<f:param name="addPanel" />
		<f:param name="eventXML" />
		
		<f:derived name="properties" from="addPanel">
			<get what="properties" />
		</f:derived>

		<xsl:template>
			<transaction>
				<intact with-id="{$addPanel/@id}" prop="properties" action="set">
					<with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'newName'" />
							<xsl:with-param name="attributeValue" select="$eventXML/@value" />
						</xsl:call-template>
					</with-param>
				</intact>
			</transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:value-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>	
	</f:transaction>

	<f:transaction name="TypeInput" event="change" button="typeinput">
		<f:param name="addPanel" />
		<f:param name="eventXML" />

		<xsl:template>
			<transaction>
				<f:perform name="TypeInputHelper">
					<f:with-param name="addPanel" value-id="{$addPanel/@id}" />
					<f:with-param name="value">
						<f:string value="{$eventXML/@value}" />
					</f:with-param>
				</f:perform>
			</transaction>
		</xsl:template>
	</f:transaction>


	<f:transaction name="TypeInputHelper">
		<f:param name="addPanel" />
		<f:param name="value" />
		
		<f:derived name="properties" from="addPanel">
			<get what="properties" />
		</f:derived>

		<xsl:template>
			<transaction>
				<intact with-id="{$addPanel/@id}" prop="properties" action="set">
					<with-param>
						<xsl:call-template name="changeAttribute">
							<xsl:with-param name="xml" select="$properties" />
							<xsl:with-param name="attributeName" select="'newType'" />
							<xsl:with-param name="attributeValue" select="$value/@value" />
						</xsl:call-template>
					</with-param>
				</intact>
			</transaction>
		</xsl:template>
		
		<xsl:template name="changeAttribute">
			<xsl:param name="xml" />
			<xsl:param name="attributeName" />
			<xsl:param name="attributeValue" />
			
			<xsl:for-each select="$xml">
				<xsl:copy>
					<xsl:copy-of select="$xml/@*[local-name() != $attributeName]" />
					<xsl:attribute name="{$attributeName}"><xsl:value-of select="$attributeValue" /></xsl:attribute>
					<xsl:copy-of select="$xml/node()" />
				</xsl:copy>
			</xsl:for-each>
		</xsl:template>	
	</f:transaction>



	
	<f:transaction name="Add" event="click" button="add">
		<f:param name="addFocus" />
		<f:param name="panelLayer" />
		<f:param name="addPanel" />
		
		<f:derived name="properties" from="addPanel">
			<get what="properties" />
		</f:derived>

		<xsl:template>
			<transaction>
				<xsl:choose>
					<xsl:when test="$properties/@newType = 'Individual'">
						<f:perform absurl="xml/api/makeIndividual.xml" prefix="newob">
							<f:with-param name="parentSituation" value-id="{$addFocus/@id}" />
						</f:perform>
					</xsl:when>
					<xsl:when test="$properties/@newType = 'Situation'">
						<f:perform absurl="xml/api/makeSituation.xml" prefix="newob">
							<f:with-param name="parentSituation" value-id="{$addFocus/@id}" />
						</f:perform>
					</xsl:when>
					<xsl:otherwise>
						<f:perform absurl="xml/api/makeIndividual.xml" prefix="newob">
							<f:with-param name="parentSituation" value-id="{$addFocus/@id}" />
						</f:perform>
					</xsl:otherwise>
				</xsl:choose>
				
				<f:perform absurl="xml/api/modifyContent.xml" prefix="ind">
					<f:with-param name="object" value-var="newob.o" />
					<f:with-param name="content">
						<f:string value='{$properties/@newName}' />
					</f:with-param>
				</f:perform>

				<f:perform absurl="xml/api/makeInfon.xml">
					<f:with-param name="parentSituation" value-predef="ont" />
					<f:with-param name="relation" value-predef="ofType" />
				
					<f:with-param name="arcs">
						<f:assoc>
							<f:pair>
								<f:key><f:string value="type" /></f:key>
								<f:value>
									<xsl:choose>
										<xsl:when test="$properties/@newType = 'Individual'">
											<f:ob predef="personType" />
										</xsl:when>
										<xsl:when test="$properties/@newType = 'Situation'">
											<f:ob predef="movieType" />
										</xsl:when>
										<xsl:otherwise>
											<f:ob predef="personType" />
										</xsl:otherwise>
									</xsl:choose>
								</f:value>
							</f:pair>
							<f:pair>
								<f:key><f:string value="instance" /></f:key>
								<f:value>
									<f:ob var="newob.o" />
								</f:value>
							</f:pair>
						</f:assoc>
					</f:with-param>
				</f:perform>




				<f:perform name="TypeInputHelper">
					<f:with-param name="addPanel" value-id="{$addPanel/@id}" />
					<f:with-param name="value">
						<f:string value="Individual" />
					</f:with-param>
				</f:perform>

				<f:perform name="Close">
					<f:with-param name="panelLayer" value-id="{$panelLayer/@id}" />
				</f:perform>

			</transaction>
		</xsl:template>		
	</f:transaction>
	
</f:binding>



