<f:function
	xmlns:f="http://www.filmsfolded.com/xsl/ui"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:svg="http://www.w3.org/2000/svg">

	<f:param name="videoTimeline" />
	<f:param name="width" />
	<f:param name="height" />
	<f:derived name="embedVideo" from="videoTimeline">
		<f:get what="embedVideo" />
	</f:derived>
	<f:derived name="video" from="videoTimeline">
		<f:get what="video" />
	</f:derived>
	<f:derived name="src" from="video">
		<f:get what="src" />
	</f:derived>
	<f:derived name="aspect" from="video">
		<f:get what="aspect" />
	</f:derived>
	<f:derived name="zoomWidth" from="videoTimeline">
		<f:get what="zoomWidth" />
	</f:derived>
	
	<xsl:template>
		<xsl:variable name="w" select="$width/@value" />
		<xsl:variable name="h" select="$height/@value" />
		<xsl:variable name="vidwidth" select="round($aspect/@value * $h)" />
		
		<html:div>
			<html:div class="timeline" left="0" top="0" width="{$w - $vidwidth}" height="{$h}">
				<!-- <html:div style="position:absolute; top: 0px; left: 0px; width: 10000px; height: 40px; background-color:pink;" onmousemove="testChangeTime(event)" /> -->
				<html:div class="rulerContainer" style="position:absolute; top: 0px; left: 0px; width: {$zoomWidth/@value}px; height: 100%;">
					<f:binding url="bindings/videoTimeline.xml">
						<f:with-param name="videoTimeline"><xsl:copy-of select="$videoTimeline" /></f:with-param>
					</f:binding>
					
					<f:thunk url="timeline.xml">
						<f:with-param name="videoTimeline"><xsl:copy-of select="$videoTimeline" /></f:with-param>
					</f:thunk>
					
					<f:thunk name="currentTimeCursor">
						<f:with-param name="videoTimeline"><xsl:copy-of select="$videoTimeline" /></f:with-param>
					</f:thunk>
					
				</html:div>
				
			</html:div>
			<html:div left="{$w - $vidwidth}" top="0" width="{$vidwidth}" height="{$h}">
				<f:embed>
					<f:with-param name="type"><f:string value="video" /></f:with-param>
					<f:with-param name="embedVideo"><xsl:copy-of select="$embedVideo" /></f:with-param>
					<f:with-param name="src"><xsl:copy-of select="$src" /></f:with-param>
					<f:with-param name="width"><f:number value="{$vidwidth}" /></f:with-param>
					<f:with-param name="height"><f:number value="{$h}" /></f:with-param>
				</f:embed>
			</html:div>
			

			
			
			<!-- <f:thunk name="currentTimeCursor">
				<f:with-param name="videoTimeline"><xsl:copy-of select="$videoTimeline" /></f:with-param>
			</f:thunk> -->
			
		</html:div>
	</xsl:template>
	
	<f:function name="currentTimeCursor">
		<f:param name="videoTimeline" />
		<f:derived name="embedVideo" from="videoTimeline">
			<f:get what="embedVideo" />
		</f:derived>
		<f:derived name="currentTime" from="embedVideo">
			<f:get what="currentTime" />
		</f:derived>
		<f:derived name="selectedStartTime" from="videoTimeline">
			<f:get what="selectedStartTime" />
		</f:derived>
		<f:derived name="selectedEndTime" from="videoTimeline">
			<f:get what="selectedEndTime" />
		</f:derived>
		
		<f:derived name="video" from="videoTimeline">
			<f:get what="video" />
		</f:derived>
		<f:derived name="duration" from="video">
			<f:get what="duration" />
		</f:derived>
		<f:derived name="zoomWidth" from="videoTimeline">
			<f:get what="zoomWidth" />
		</f:derived>
		
		<xsl:template>
			<xsl:variable name="ratio" select="$zoomWidth/@value div $duration/@value" />
			<html:div>
				<xsl:if test="$currentTime">
					<html:div class="ruler-cursor" style="left: {$currentTime/@value * $ratio}px">

					</html:div>
				</xsl:if>
				<xsl:choose>
					<xsl:when test="$selectedStartTime and $selectedEndTime">
						<html:div class="ruler-selected-range" style="left: {$selectedStartTime/@value * $ratio}px; width: {($selectedEndTime/@value - $selectedStartTime/@value) * $ratio - 1}px">
							
						</html:div>
					</xsl:when>
					<xsl:when test="$selectedStartTime">
						<html:div class="ruler-selected" style="left: {$selectedStartTime/@value * $ratio}px">
							
						</html:div>
					</xsl:when>
					<xsl:otherwise>
						
					</xsl:otherwise>
				</xsl:choose>
			</html:div>
		</xsl:template>
	</f:function>
	
</f:function>