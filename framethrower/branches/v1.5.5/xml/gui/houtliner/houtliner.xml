<f:function
	xmlns:f="http://www.filmsfolded.com/xsl/ui"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:svg="http://www.w3.org/2000/svg">

	<f:param name="outlineRoot" />
	<f:derived name="focus" from="outlineRoot">
		<f:get what="focus" />
	</f:derived>
	<f:derived name="childOutline" from="outlineRoot">
		<f:get what="childOutline" />
	</f:derived>
	<f:derived name="expanded" from="outlineRoot">
		<f:get what="expanded" />
	</f:derived>
	
	<xsl:template>
		<html:div>
			<html:span>
				<f:binding url="bindings/houtlinerbindings.xml">
					<f:with-param name="outlineRoot"><xsl:copy-of select="$outlineRoot" /></f:with-param>
				</f:binding>
				<xsl:choose>
					<xsl:when test="$expanded/@value = 'false'">
						<f:button name="rootExpand" />
						<html:div class="collapsed" />
					</xsl:when>
					<xsl:otherwise>
						<f:button name="rootUnexpand" />
						<html:div class="expanded" />
					</xsl:otherwise>
				</xsl:choose>
			</html:span>
			<f:thunk url="../printContent.xml">
				<f:with-param name="focus"><xsl:copy-of select="$focus" /></f:with-param>
				<f:with-param name="style"><f:string value="inline" /></f:with-param>
			</f:thunk>
			<xsl:if test="$expanded/@value = 'true'">
				<f:thunk name="houtliner">
					<f:with-param name="outline">
						<xsl:copy-of select="$childOutline" />
					</f:with-param>
				</f:thunk>
			</xsl:if>
		</html:div>
	</xsl:template>


	<f:function name="houtliner">
		<f:param name="outline" />
		<f:derived name="childOutlines" from="outline">
			<f:get what="childOutlines" />
		</f:derived>
	
		<f:derived name="expandedChildren" from="outline">
			<f:get what="expandedChildren" />
		</f:derived>
	
		<f:derived name="childType" from="outline">
			<f:get what="childType" />
		</f:derived>
	
		<f:derived name="focus" from="outline">
			<f:get what="focus" />
		</f:derived>
	
		<f:derived name="relations" from="focus">
			<f:get what="involves" />
			<f:get what="relation" />
		</f:derived>
	
		<f:derived name="infons" from="focus">
			<f:get what="involves" />
			<f:filter>
				<f:get what="relation" />
				<f:equals>
					<f:start from="childType" />
				</f:equals>			
			</f:filter>
		</f:derived>
	
		<xsl:template>
			<html:div style="display:inline;">
				<html:div style="display:inline;">
					<f:binding url="bindings/houtlinerbindings.xml">
						<f:with-param name="outline"><xsl:copy-of select="$outline" /></f:with-param>
						<f:with-param name="relations"><xsl:copy-of select="$relations" /></f:with-param>
					</f:binding>
					<f:button name="select" />
					<html:select>
						<xsl:for-each select="$relations/*">
							<f:thunk name="relationNameOption">
								<f:with-param name="focus"><xsl:copy-of select="." /></f:with-param>
							</f:thunk>
						</xsl:for-each>
					</html:select>
				</html:div>
			
				<html:div style="margin-left:10px;">
					<xsl:for-each select="$infons/*" >
						<f:thunk name="getChildrenFromInfon">
							<f:with-param name="infon"><xsl:copy-of select="."/></f:with-param>
							<f:with-param name="focus"><xsl:copy-of select="$focus" /></f:with-param>
							<f:with-param name="outline"><xsl:copy-of select="$outline" /></f:with-param>
							<f:with-param name="childOutlines"><xsl:copy-of select="$childOutlines" /></f:with-param>
							<f:with-param name="expandedChildren"><xsl:copy-of select="$expandedChildren" /></f:with-param>
						</f:thunk>
					</xsl:for-each>
				</html:div>
			
			</html:div>
		</xsl:template>
	</f:function>
	
	<f:function name="relationNameOption">
		<f:param name="focus" />
		<f:derived name="content" from="focus">
			<f:get what="content" />
		</f:derived>
		<xsl:template>
			<html:option value="{$focus/@id}">
				<xsl:value-of select="$content/f:name/@value" />
			</html:option>
		</xsl:template>
	</f:function>
	
	<f:function name="getChildrenFromInfon">
		<f:param name="infon" />
		<f:param name="focus" />
		<f:param name="outline" />
		<f:param name="childOutlines" />
		<f:param name="expandedChildren" />
		
		<f:derived name="arcs" from="infon">
			<f:get what="arcs" />
		</f:derived>
		
		<xsl:template>
			<html:div>
				<xsl:variable name="children" select="$arcs/f:pair/f:value/f:ob[@id != $focus/@id]" />
				<xsl:for-each select="$children" >
					<xsl:variable name="current" select="." />
					<xsl:choose>
						<xsl:when test="count($expandedChildren/*[@id = $current/@id]) = 0">
							<html:span>
								<f:binding url="bindings/houtlinerbindings.xml">
									<f:with-param name="outline"><xsl:copy-of select="$outline" /></f:with-param>
									<f:with-param name="child"><xsl:copy-of select="." /></f:with-param>
								</f:binding>
								<f:button name="expand" />
								<html:div class="collapsed" />
							</html:span>
							<f:thunk url="../printContent.xml">
								<f:with-param name="focus"><xsl:copy-of select="." /></f:with-param>
								<f:with-param name="style"><f:string value="inline" /></f:with-param>
							</f:thunk>
						</xsl:when>
						<xsl:otherwise>
							<html:span>
								<f:binding url="bindings/houtlinerbindings.xml">
									<f:with-param name="outline"><xsl:copy-of select="$outline" /></f:with-param>
									<f:with-param name="child"><xsl:copy-of select="." /></f:with-param>
								</f:binding>
								<f:button name="unexpand" />
								<html:div class="expanded" />
							</html:span>
							<f:thunk url="../printContent.xml">
								<f:with-param name="focus"><xsl:copy-of select="." /></f:with-param>
								<f:with-param name="style"><f:string value="inline" /></f:with-param>
							</f:thunk>

							<f:thunk name="houtliner">
								<f:with-param name="outline">
									<xsl:copy-of select="$childOutlines/f:pair[f:key/f:ob/@id = $current/@id]/f:value/*" />
								</f:with-param>
							</f:thunk>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:for-each>				
			</html:div>
		</xsl:template>
	</f:function>
	
	
</f:function>