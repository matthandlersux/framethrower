<tests>
	<!-- <test name='sortedFoldTest1'>
		<startcap name='sc' type='set number' />
		<messages>
			<set scname = 'sc'>
				<number value='1' />
			</set>
			<set scname = 'sc'>
				<number value='7' />
			</set>
			<set scname = 'sc'>
				<number value='3' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'sortedFold true plus 0 sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '11' />
			</set>
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<number value='2' />
			</set>
		</messages>

		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '11' />
			</remove>
			<set ecname = 'ec' >
				<number value = '13' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='3' />
			</remove>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '13' />
			</remove>
			<set ecname = 'ec' >
				<number value = '10' />
			</set>
		</expectedmessages>
		
	</test> -->
	
	<test name='rangeByKeyTest1'>
		<startcap name='startCell' type='unit number' />
		<startcap name='endCell' type='unit number' />
	
		<messages>
			<set scname = 'startCell'>
				<number value='5' />
			</set>
			<set scname = 'endCell'>
				<number value='7' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'rangeByKey startCell endCell (oneTo 9)' />

		<expectedmessages>
			<set ecname = 'ec'>
				<number value = '5' />
			</set>
			<set ecname = 'ec'>
				<number value = '6' />
			</set>
			<set ecname = 'ec'>
				<number value = '7' />
			</set>
			<none ecname = 'ec' />
		</expectedmessages>
		
		<messages>
			<remove scname = 'startCell'>
				<number value='5' />
			</remove>
			
			<set scname = 'startCell'>
				<number value = '2' />
			</set>
		</messages>
		
		<expectedmessages>
			<set ecname = 'ec'>
				<number value = '2' />
			</set>
			<set ecname = 'ec'>
				<number value = '3' />
			</set>
			<set ecname = 'ec'>
				<number value = '4' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'endCell'>
				<number value='7' />
			</remove>
			
			<set scname = 'endCell'>
				<number value = '5' />
			</set>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec'>
				<number value = '6' />
			</remove>
			<remove ecname = 'ec'>
				<number value = '7' />
			</remove>
		</expectedmessages>
		
	</test>
	
	<test name='unfoldSetTest1'>
		<endcap name = 'ec' expression = 'unfoldSet oneTo 5' />
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '5' />
			</set>
			<set ecname = 'ec' >
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '2' />
			</set>
			<set ecname = 'ec' >
				<number value = '3' />
			</set>
			<set ecname = 'ec' >
				<number value = '4' />
			</set>
		</expectedmessages>

	</test>
	
	<test name='unfoldMapTest1'>
		<endcap name = 'ec' expression = 'invert (mapMapValue (compose returnUnitSet returnUnit) (unfoldMap oneTo 5))' />
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '0' />
				<sc name = 'sc0' />
			</set>
			<set ecname = 'ec' >
				<number value = '1' />
				<sc name = 'sc1' />
			</set>
		</expectedmessages>
		
		<endcap name = 'ec0' expression = 'sc0' />
		<endcap name = 'ec1' expression = 'sc1' />

		<expectedmessages>
			<set ecname ='ec0' >
				<number value = '5' />
			</set>
			<set ecname ='ec1' >
				<number value = '1' />
			</set>
			<set ecname ='ec1' >
				<number value = '2' />
			</set>
			<set ecname ='ec1' >
				<number value = '3' />
			</set>
			<set ecname ='ec1' >
				<number value = '4' />
			</set>									
		</expectedmessages>

	</test>
	
	<test name='setDifferenceTest1'>
		<startcap name='sc' type='set number' />
		<startcap name='sc2' type='set number' />
		<messages>
			<set scname = 'sc'>
				<number value='1' />
			</set>
			<set scname = 'sc'>
				<number value='5' />
			</set>
			<set scname = 'sc'>
				<number value='7' />
			</set>
			<set scname = 'sc2'>
				<number value='5' />
			</set>
			<set scname = 'sc2'>
				<number value='6' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'setDifference sc sc2' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '7' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc2'>
				<number value='5' />
			</remove>
		</messages>
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '5' />
			</set>
		</expectedmessages>
	</test>
	
	<test name='unionTest1'>
		<startcap name='sc' type='set number' />
		<startcap name='sc2' type='set number' />
		<messages>
			<set scname = 'sc'>
				<number value='1' />
			</set>
			<set scname = 'sc'>
				<number value='5' />
			</set>
			<set scname = 'sc2'>
				<number value='5' />
			</set>
			<set scname = 'sc2'>
				<number value='3' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'union sc sc2' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '5' />
			</set>
			<set ecname = 'ec' >
				<number value = '3' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='5' />
			</remove>
			<remove scname = 'sc'>
				<number value='1' />
			</remove>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '1' />
			</remove>
		</expectedmessages>
	</test>


	<test name='foldTest1'>
		<startcap name='sc' type='set number' />

		<endcap name = 'ec' expression = 'fold plus (x -> y -> subtract y x) 0 sc' />

		<messages>
			<set scname = 'sc'>
				<number value='2' />
			</set>
			<set scname = 'sc'>
				<number value='5' />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '0' />
			</set>
			<remove ecname = 'ec' >
				<number value = '0' />
			</remove>
			<set ecname = 'ec' >
				<number value = '2' />
			</set>
			<remove ecname = 'ec' >
				<number value = '2' />
			</remove>
			<set ecname = 'ec' >
				<number value = '7' />
			</set>
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<number value='3' />
			</set>
			<set scname = 'sc'>
				<number value='5' />
			</set>
			<remove scname = 'sc'>
				<number value='2' />
			</remove>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '7' />
			</remove>
			<set ecname = 'ec' >
				<number value = '10' />
			</set>
			<remove ecname = 'ec' >
				<number value = '10' />
			</remove>
			<set ecname = 'ec' >
				<number value = '8' />
			</set>
		</expectedmessages>
	</test>

	<test name='mapTest1'>
		<startcap name='sc' type='unit number' />
	
		<messages>
			<set scname = 'sc'>
				<number value='2' />
			</set>
		</messages>

		<endcap name = 'ec' expression = 'returnUnitMap 1 sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
				<number value = '2' />
			</set>
		</expectedmessages>
	
		<messages>
			<remove scname = 'sc'>
				<number value='2' />
			</remove>
			<set scname = 'sc'>
				<number value='4' />
			</set>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '1' />
			</remove>
			<set ecname = 'ec' >
				<number value = '1' />
				<number value = '4' />
			</set>
		</expectedmessages>
	
		<messages>
			<remove scname = 'sc'>
				<number value='4' />
			</remove>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '1' />
			</remove>
		</expectedmessages>
	
	</test>

	<test name='bindSetTest1'>
		<startcap name='sc' type='set number' />
	
		<messages>
			<set scname = 'sc'>
				<number value='4' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'bindSet oneTo sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '2' />
			</set>
			<set ecname = 'ec' >
				<number value = '3' />
			</set>
			<set ecname = 'ec' >
				<number value = '4' />
			</set>
		</expectedmessages>
	
		<messages>
			<set scname = 'sc'>
				<number value='6' />
			</set>
		</messages>
	
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '5' />
			</set>
			<set ecname = 'ec' >
				<number value = '6' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='6' />
			</remove>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '5' />
			</remove>
			<remove ecname = 'ec' >
				<number value = '6' />
			</remove>
		</expectedmessages>
	
	</test>

	<test name='bindMapTest1'>
		<startcap name='sc' type='map number number' />
	
		<messages>
			<set scname = 'sc'>
				<number value='4' />
				<number value='1' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'bindMap oneToMap sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '2' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '3' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '4' />
				<number value = '1' />
			</set>
		</expectedmessages>
	
		<messages>
			<set scname = 'sc'>
				<number value='6' />
				<number value='2' />
			</set>
		</messages>
	
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '5' />
				<number value = '2' />
			</set>
			<set ecname = 'ec' >
				<number value = '6' />
				<number value = '2' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='6' />
			</remove>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '5' />
			</remove>
			<remove ecname = 'ec' >
				<number value = '6' />
			</remove>
		</expectedmessages>

	</test>

	<test name='bindMapTest2'>
		<startcap name='sc' type='map number number' />
	
		<messages>
			<set scname = 'sc'>
				<number value='4' />
				<number value='1' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'bindMap oneToMap sc' />
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '2' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '3' />
				<number value = '1' />
			</set>
			<set ecname = 'ec' >
				<number value = '4' />
				<number value = '1' />
			</set>
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<number value='6' />
				<number value='2' />
			</set>
		</messages>
	
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '5' />
				<number value = '2' />
			</set>
			<set ecname = 'ec' >
				<number value = '6' />
				<number value = '2' />
			</set>
		</expectedmessages>

		<messages>
			<remove scname = 'sc'>
				<number value='6' />
			</remove>
		</messages>
	
		<expectedmessages>
			<remove ecname = 'ec' >
				<number value = '5' />
			</remove>
			<remove ecname = 'ec' >
				<number value = '6' />
			</remove>
		</expectedmessages>

	</test>

	<test name='invertTest1'>
		<startcap name='sc' type='map number (set number)' />
		<startcap name='sc1' type='set number' />
		<startcap name='sc2' type='set number' />
		<startcap name='sc3' type='set number' />
	
		<messages>
			<set scname = 'sc'>
				<number value='1' />
				<sc name='sc1' />
			</set>
			<set scname = 'sc'>
				<number value='2' />
				<sc name='sc2' />
			</set>
			<set scname = 'sc'>
				<number value='3' />
				<sc name='sc3' />
			</set>
			<set scname = 'sc1'>
				<number value='10' />
			</set>
			<set scname = 'sc1'>
				<number value='20' />
			</set>
			<set scname = 'sc2'>
				<number value='20' />
			</set>
			<set scname = 'sc2'>
				<number value='30' />
			</set>
			<set scname = 'sc3'>
				<number value='10' />
			</set>
			<set scname = 'sc3'>
				<number value='30' />
			</set>
		</messages>
	
		<endcap name = 'ec' expression = 'invert sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '10' />
				<sc name = 'outCap10' />
			</set>
			<set ecname = 'ec' >
				<number value = '20' />
				<sc name = 'outCap20' />
			</set>
			<set ecname = 'ec' >
				<number value = '30' />
				<sc name = 'outCap30' />
			</set>
		</expectedmessages>

		<endcap name = 'ec10' expression = 'outCap10' />
		<endcap name = 'ec20' expression = 'outCap20' />
		<endcap name = 'ec30' expression = 'outCap30' />

		<expectedmessages>
			<set ecname = 'ec10' >
				<number value = '1' />
			</set>
			<set ecname = 'ec10' >
				<number value = '3' />
			</set>
			<set ecname = 'ec20' >
				<number value = '1' />
			</set>
			<set ecname = 'ec20' >
				<number value = '2' />
			</set>
			<set ecname = 'ec30' >
				<number value = '2' />
			</set>
			<set ecname = 'ec30' >
				<number value = '3' />
			</set>
		</expectedmessages>

		<messages>
			<remove scname='sc3'>
				<number value = '30' />
			</remove>
		</messages>

		<expectedmessages>
			<remove ecname ='ec30'>
				<number value = '3' />
			</remove>
		</expectedmessages>

		<messages>
			<remove scname='sc'>
				<number value = '2' />
			</remove>
		</messages>

		<expectedmessages>
			<remove ecname ='ec20'>
				<number value = '2' />
			</remove>
			<remove ecname ='ec30'>
				<number value = '2' />
			</remove>
			<remove ecname = 'ec' >
				<number value = '30' />
			</remove>
		</expectedmessages>

	</test>

	<test name='returnUnitTest1'>

		<endcap name = 'ec' expression = 'returnUnit 1' />

		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '1' />
			</set>
		</expectedmessages>
	
	</test>

	<test name='returnUnitSetTest1'>
		<startcap name='sc' type='unit number' />

		<endcap name = 'ec' expression = 'returnUnitSet sc' />

		<messages>
			<set scname = 'sc'>
				<number value='2' />
			</set>
		</messages>
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '2' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='2' />
			</remove>
			<set scname = 'sc' >
				<number value = '4' />
			</set>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec'>
				<number value='2' />
			</remove>
			<set ecname = 'ec' >
				<number value = '4' />
			</set>
		</expectedmessages>
	</test>

	<test name='reactiveApplyTest1'>
		<startcap name='sc' type='Unit (Number -> Set Number)' />

		<endcap name = 'ec' expression = 'reactiveApply sc 5' />

		<messages>
			<set scname = 'sc'>
				<func name='oneTo' />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<sc name = 'resultCap' />
			</set>
		</expectedmessages>
		
		<endcap name = 'ec2' expression = 'resultCap' />
		
		<expectedmessages>
			<set ecname = 'ec2' >
				<number value = '1' />
			</set>
			<set ecname = 'ec2' >
				<number value = '2' />
			</set>
			<set ecname = 'ec2' >
				<number value = '3' />
			</set>
			<set ecname = 'ec2' >
				<number value = '4' />
			</set>
			<set ecname = 'ec2' >
				<number value = '5' />
			</set>
		</expectedmessages>

	</test>
	
	<test name='takeOneTest1'>
		<startcap name='sc' type='Set Number' />

		<endcap name = 'ec' expression = 'takeOne sc' />

		<messages>
			<set scname = 'sc'>
				<number value='2' />
			</set>
			<set scname = 'sc'>
				<number value='4' />
			</set>
		</messages>
		
		<expectedmessages>
			<set ecname = 'ec' >
				<number value = '2' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<number value='2' />
			</remove>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec'>
				<number value='2' />
			</remove>
			<set ecname = 'ec' >
				<number value = '4' />
			</set>
		</expectedmessages>
	</test>
	
	<!-- <test name='anyTest1'>
		<startcap name='sc' type='Set Bool' />

		<endcap name = 'ec' expression = 'any (compose returnUnit (equal false)) sc' />

		<messages>
			<set scname = 'sc'>
				<bool value='true'/>
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<bool value='false'/>
			</set>
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<bool value='false'/>
			</set>
		</messages>

		<expectedmessages>
			<remove ecname = 'ec' >
				<bool value='false'/>
			</remove>
			<set ecname = 'ec' >
				<bool value='true'/>
			</set>
		</expectedmessages>

	</test> -->
	
	<test name='reactiveNotTest1'>
		<startcap name = 'sc' type = 'unit null' />
		<endcap name = 'ec' expression = 'reactiveNot sc' />

		<expectedmessages>
			<set ecname = 'ec' >
				<null />
			</set>
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<null />
			</set>
		</messages>

		<expectedmessages>
			<remove ecname = 'ec' >
				<null />
			</remove>
		</expectedmessages>
	</test>

	<test name='buildMapTest1'>

		<startcap name = 'sc' type = 'set number' />

		<endcap name = 'ec' expression = 'buildMap (plus 2) sc' />

		<messages>
			<set scname = 'sc'>
				<number value = '1' />
			</set>
			<set scname = 'sc'>
				<number value = '2' />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec'>
				<number value = '1' />
				<number value = '3' />
			</set>
			<set ecname = 'ec'>
				<number value = '2' />
				<number value = '4' />
			</set>
		</expectedmessages>

	</test>
	<test name='reactiveNotTest1'>

		<endcap name = 'ec' expression = 'reactiveNot (returnUnit null)' />
		<endcap name = 'ec2' expression = 'reactiveNot (reactiveNot (returnUnit null))' />

		<expectedmessages>
			<none ecname = 'ec' />
			<set ecname = 'ec2' >
				<null />
			</set>
		</expectedmessages>

	</test>

	<test name='reactiveAndTest1'>

		<startcap name = 'sc' type = 'unit null' />

		<endcap name = 'ec' expression = 'reactiveAnd sc (returnUnit null)' />

		<expectedmessages>
			<none ecname = 'ec' />
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<null />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<null />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<null />
			</remove>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec' >
				<null />
			</remove>
		</expectedmessages>
	</test>

	<test name='reactiveOrTest1'>

		<startcap name = 'sc' type = 'unit null' />
		<startcap name = 'sc2' type = 'unit null' />

		<endcap name = 'ec' expression = 'reactiveOr sc sc2' />

		<expectedmessages>
			<none ecname = 'ec' />
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<null />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<null />
			</set>
		</expectedmessages>
		
		<messages>
			<set scname = 'sc2' >
				<null />
			</set>
			<remove scname = 'sc'>
				<null />
			</remove>
		</messages>
		
		<expectedmessages>
			<none ecname = 'ec' />
		</expectedmessages>
	</test>

	<test name='gateTest1'>

		<startcap name = 'sc' type = 'unit null' />

		<endcap name = 'ec' expression = 'gate sc 7' />

		<expectedmessages>
			<none ecname = 'ec' />
		</expectedmessages>

		<messages>
			<set scname = 'sc'>
				<null />
			</set>
		</messages>

		<expectedmessages>
			<set ecname = 'ec' >
				<number value='7' />
			</set>
		</expectedmessages>
		
		<messages>
			<remove scname = 'sc'>
				<null />
			</remove>
		</messages>
		
		<expectedmessages>
			<remove ecname = 'ec'>
				<number value='7'/>
			</remove>
		</expectedmessages>
	</test>
</tests>