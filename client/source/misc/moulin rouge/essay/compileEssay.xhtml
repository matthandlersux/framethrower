<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://www.worldmerge.com/2008/xsl"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:svg="http://www.w3.org/2000/svg">

<head>
<title>Essay Compiler</title>

<script src="../../js/util/util.js"></script>

<script>

function loadText(url) {
  try {
    var req = new XMLHttpRequest();
    req.open("GET", url, false);
    req.send(null);
  } catch (e) {
    console.log("loadText failed: " + url);
  }

    return req.responseText;
}

function findAndStrip(str, re) {
  var start = 0;
  var newstr = "";
  var found = [];

  var result;
  while ((result = re.exec(str)) != null) {
    newstr += str.substring(start, result.index);

    found.push({
      string: result[0],
      index: newstr.length
    });

    start = re.lastIndex;
  }
  newstr += str.substring(start);

  return {
    string: newstr,
    found: found
  };

}

// TODO: make do ranges...
function convertBracketTime(s) {
  function convertColon(s) {
    var times = s.split(":");
    var ret = 0;
    forEach(times, function (time, i) {
      ret += time * Math.pow(60, times.length - 1 - i);
    });
    return ret;
  }

  s = s.substring(1, s.length - 1);
  var range = s.split("-");
  if (range.length > 1) {
    return {
      start: convertColon(range[0]),
      end: convertColon(range[1])
    };
  } else {
    return convertColon(s);
  }


}



var essay = loadText("essay.txt");


var stripped = findAndStrip(essay, /\[[^\]]*\]/g);

var times = map(stripped.found, function (x) {
  return {
    time: convertBracketTime(x.string),
    index: x.index
  };
});


/*

setEssayText(text::String)

makeTextPoint(char::Number) :: Situation
makeTextRange(start::Number, end::Number) :: Situation

makeVideoPoint(time::Number) :: Situation
makeVideoRange(start::Number, end::Number) :: Situation

makeLink(from::Situation, to::Situation)

*/





var commands = [];

commands.push("setEssayText \"" + stripped.string.replace(/"/g, "\\\"") + "\",");

var i = 0;
function getNewVar() {
  return "v" + (i++);
}
forEach(times, function (time) {
  var video = getNewVar();
  if (time.time.start) {
    commands.push(video + " = " + "makeVideoRange "+time.time.start+" "+time.time.end + ",");
  } else {
    commands.push(video + " = " + "makeVideoPoint "+time.time + ",");
  }

  var text = getNewVar();
  commands.push(text + " = " + "makeTextPoint "+time.index + ",");

  commands.push("makeLink "+text+" "+video + ",");
});


var ret = commands.join("\n");
ret = ret.substring(0, ret.length - 1);



console.log(ret);


function init() {
  document.getElementById("mainscreen").appendChild(document.createTextNode(ret));
}



//console.log(essay);

</script>



</head>

<body onload="init()">

  <pre id="mainscreen"></pre>

</body>

</html>