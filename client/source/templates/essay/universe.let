universe = state {makeSituationNamed "Universe"},

//external artifact types
extNumber = state {makeSituationNamedIn "NUMBER" universe},
extText = state {makeSituationNamedIn "TEXT" universe},
extVideo = state {makeSituationNamedIn "VIDEO" universe},

//unstructured link
ulink = state {makeSituationNamedIn "Unstructured Link" universe},
ulinkSource = state {makeSituationNamedIn "Source" ulink},
ulinkTarget = state {makeSituationNamedIn "Target" ulink},


// ========================================================================================================
// lines (timelines, textlines, etc)
// ========================================================================================================

//line
line = state {makeSituationNamedIn "Line" universe},
linePoint = state {makeSituationNamedIn "Point" line},
lineInterval = state {makeSituationNamedIn "Interval" line},
lineHasEndpoints = state {makeSituationNamedIn "has Endpoints" line},
lineHasEndpointsStart = state {makeSituationNamedIn "Start" lineHasEndpoints},
lineHasEndpointsEnd = state {makeSituationNamedIn "End" lineHasEndpoints},
lineHasEndpointsBetween = state {makeSituationNamedIn "Interval Between" lineHasEndpoints},

//timeline
timeline = state {makeSituationNamedIn "Timeline" universe},
lineToTimeline = state {makePipe timeline line},
timelinePoint = state {
	timelinePoint <- makeSituationNamedIn "time point" timeline,
	makePipe timelinePoint extNumber,
	makePipeIn1 timelinePoint linePoint lineToTimeline,
	return timelinePoint
},

//textline
textline = state {makeSituationNamedIn "Textline" universe},
lineToTextline = state {makePipe textline line},
textlinePoint = state {
	textlinePoint <- makeSituationNamedIn "text point" textline,
	makePipe textlinePoint extNumber,
	makePipeIn1 textlinePoint linePoint lineToTextline,
	return textlinePoint
},


// ========================================================================================================
// generic structures (movies, essays, etc)
// ========================================================================================================

//generic essay structure
essay = state {
	essay <- makeSituationNamedIn "Essay" universe,
	makePipe essay extText,
	return essay
},
textlineToEssay = state {makePipe essay textline},

//generic movie structure
movie = state {
	movie <- makeSituationNamedIn "Movie" universe,
	makePipe movie extVideo,
	ccaptions <- makeSituationNamedIn "Closed Captions" movie,
	return movie
},
timelineToMovie = state {makePipe movie timeline},


// ========================================================================================================
// creation actions
// ========================================================================================================

makeInfon2 = action (relation::Situation, p1::Situation, p2::Situation, sit::Situation, arg1::Situation, arg2::Situation) {
	pipe <- makePipe sit relation,
	makePipeIn1 arg1 p1 pipe,
	makePipeIn1 arg2 p2 pipe
},

makeInfon3 = action (relation::Situation, p1::Situation, p2::Situation, p3::Situation, sit::Situation, arg1::Situation, arg2::Situation, arg3::Situation) {
	pipe <- makePipe sit relation,
	makePipeIn1 arg1 p1 pipe,
	makePipeIn1 arg2 p2 pipe,
	makePipeIn1 arg3 p3 pipe
},

createClone = action (objectToClone::Situation, cloneIntoSituation::Situation, pipe::[Pipe])::(Situation, [Pipe]) {
	clone <- makeSituation,
	putSituationIn cloneIntoSituation clone,
	extract Situation:propName objectToClone as name {
		nameSituation clone name
	},
	clonePipe <- makePipe clone objectToClone,
	putPipeIn clonePipe pipe,
	return (clone, [clonePipe])
},


createTimePoint = action (timeline::Situation, pipeFromTimeline::[Pipe], seconds::Number)::Situation {
	tpPair <- createClone timelinePoint timeline pipeFromTimeline,
	tp = fst tpPair,
	set (Situation:propTime tp) seconds,
	return tp
},
createTextPoint = action (textline::Situation, pipeFromTextline::[Pipe], char::Number)::Situation {
	tpPair <- createClone textlinePoint textline pipeFromTextline,
	tp = fst tpPair,
	set (Situation:propTime tp) char,
	return tp
},

createInterval = action (line::Situation, pipeFromLine::[Pipe], startPoint::Situation, endPoint::Situation)::Situation {
	intPair <- createClone lineInterval line pipeFromLine,
	int = fst intPair,
	makeInfon3 lineHasEndpoints lineHasEndpointsStart lineHasEndpointsEnd lineHasEndpointsBetween line startPoint endPoint int,
	return int
},






// ========================================================================================================
// Moulin Rouge movie
// ========================================================================================================

mr = state {
	mr <- makeSituationNamedIn "Moulin Rouge" universe,
	extVideo <- create(ExtVideo, {id: "mr", aspectRatio: 2.222, duration: 7668}),
	set (Situation:propVideo mr) extVideo,
	return mr
},
movieTomr = state {makePipe mr movie},


// ========================================================================================================
// Moulin Rouge essay
// ========================================================================================================

mrEssay = state {makeSituationNamedIn "Tedg's Moulin Rouge Essay" universe},
essayToMrEssay = state {makePipe mrEssay essay},
pipeTextlineToMrEssay = [textlineToEssay, essayToMrEssay],

mrClonePair = state {createClone mr mrEssay nil},
mrEssayTimeline = fst mrClonePair,

pipeTimelineToMrEssayTimeline = (cons timelineToMovie (cons movieTomr (snd mrClonePair))),




universeInit = action () {
	
	// //bounded line
	// boundedLine = makeSituationNamedIn "Bounded Line" universe,
	// endPoint = makeSituationNamedIn "End Point" boundedLine,
	// boundedLineToLine = makePipe boundedLine line,
	// makePipeIn1 endPoint linePoint boundedLineToLine,

	//makePipe timeline boundedLine,
	
	lineTohasEndpoints <- makePipe lineHasEndpoints line,
	pointToStart <- makePipeIn1 lineHasEndpointsStart linePoint lineTohasEndpoints,
	pointToEnd <- makePipeIn1 lineHasEndpointsEnd linePoint lineTohasEndpoints,
	intervalToBetween <- makePipeIn1 lineHasEndpointsBetween lineInterval lineTohasEndpoints,
	
	return 4 // this shouldn't be necessary.. bug with compiler?
	
}

