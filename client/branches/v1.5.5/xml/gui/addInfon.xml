<?xml version="1.0"?>
<f:function xmlns:f="http://www.filmsfolded.com/xsl/ui" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg">
	<f:param name="width"/>
	<f:param name="height"/>
	<f:param name="panelLayer"/>
	<f:param name="addPanel"/>
	<f:derived name="addFocus" from="panelLayer">
		<f:get what="addFocus"/>
	</f:derived>
	<f:derived name="expanded" from="addPanel">
		<f:get what="expanded"/>
	</f:derived>
	
	<f:derived name="infonArgs" from="addPanel">
		<f:get what="infonArgs" />
	</f:derived>
		
	<f:derived name="selectedRelationContent" from="addPanel">
		<f:get what="selectedRelation"/>
		<f:get what="content"/>
	</f:derived>
	<f:derived name="relationContent" predef="rw">
		<f:get what="childObjects"/>
		<f:filtertype type="kernel.relation"/>
		<f:buildassoc what="content"/>
	</f:derived>
	<xsl:template>
		<xsl:variable name="w" select="$width/@value"/>
		<xsl:variable name="h" select="$height/@value"/>
		<xsl:variable name="titleBarHeight" select="30"/>
		<xsl:variable name="padding" select="15"/>
		<html:div>
			<html:div style="position:absolute; left:0; top:0; width:100%; height:100%;">
				<svg:svg width="100%" height="100%">
					<svg:rect x="0" y="0" width="100%" height="100%" opacity=".7" fill="black" stroke="#333" stroke-width="0"/>
				</svg:svg>
			</html:div>
			<html:div class="zuiBuildInfon" top="{$h*.25}" left="{$w*.25}" style="opacity: 1; position: absolute; width: 650px; height: 312px;">
				<f:binding url="bindings/addInfon.xml">
					<f:with-param name="panelLayer">
						<xsl:copy-of select="$panelLayer"/>
					</f:with-param>
					<f:with-param name="addFocus">
						<xsl:copy-of select="$addFocus"/>
					</f:with-param>
					<f:with-param name="addPanel">
						<xsl:copy-of select="$addPanel"/>
					</f:with-param>
				</f:binding>
				<html:div style="position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;">
					<html:div class="shadowBR"/>
					<html:div class="shadowBL"/>
					<html:div class="shadowTR"/>
					<html:div class="shadowTL"/>
					<html:div class="paneBackgroundBR"/>
					<html:div class="paneBackgroundBL"/>
					<html:div class="paneBackgroundTitle" style="background-color: #bbb;"/>
					<html:div class="paneBackgroundTR"/>
					<html:div class="paneBackgroundTL"/>
				</html:div>
				<html:div class="zuiTitle" style="top: 0px; position: absolute; text-align: center; font-weight: normal; font-size: 13pt; height: 29px; left: 0pt; width: 648px;">
					Build an Infon
					<html:span style="margin-left:15px;">
						<f:button name="close"/>
						<html:div class="close" />
					</html:span>
				</html:div>
				<xsl:variable name="chooseTop">
					<xsl:choose>
						<xsl:when test="$selectedRelationContent != ''">34</xsl:when>
						<xsl:otherwise>136</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<html:div>
					<xsl:if test="$selectedRelationContent != ''">
						<html:div class="infonInProgress" top="125" left="0">
							<xsl:for-each select="$selectedRelationContent/f:pseudo/*">
								<xsl:if test="self::f:role">
									<xsl:variable name="index" select="count(preceding-sibling::f:role)" />
									<xsl:variable name="arg" select="$infonArgs/*[f:key/f:number/@value = ($index)]/f:value/*" />
									<xsl:choose>
										<xsl:when test="$arg">
											<html:span class="infonObjectSurround">
												<html:div class="infonObjectParentSituation">
													<f:thunk name="printParentSitContent">
														<f:with-param name="focus">
															<xsl:copy-of select="$arg" />
														</f:with-param>
													</f:thunk>
												</html:div>
												<html:span class="buildInfonElement" style="background-color: #8c3">
													<f:thunk url="printContent.xml">
														<f:with-param name="focus"><xsl:copy-of select="$arg" /></f:with-param>
														<f:with-param name="style"><f:string value="inline" /></f:with-param>
													</f:thunk>
												</html:span>
											</html:span>
										</xsl:when>
										<xsl:otherwise>
											<html:span class="buildInfonElement">
												<html:input value="{@role}"/>
												<html:div class="grabObject">
													<f:binding url="bindings/addInfon.xml">
														<f:with-param name="argNum">
															<f:number value="{$index}" />
														</f:with-param>
														<f:with-param name="panelLayer" value-id="{$panelLayer/@id}" />
													</f:binding>
													<f:button name="browseArg" />
												</html:div>
											</html:span>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:if>
								<xsl:if test="self::f:verb">
									<html:span class="buildInfonRelation" style="background-color: #e09;">
										<xsl:value-of select="@value" />
									</html:span>
								</xsl:if>
							</xsl:for-each>

						</html:div>
					</xsl:if>
				</html:div>
				<html:div>
					<html:div class="chooseRelation" left="136" top="{$chooseTop}">
						choose a relation: 
						<xsl:choose>
							<xsl:when test="$selectedRelationContent != ''">
								<html:input value="{$selectedRelationContent/f:name/@value}" disabled="disabled"/>
							</xsl:when>
							<xsl:otherwise>
								<html:input/>
							</xsl:otherwise>
						</xsl:choose>
						<html:div class="dropDownArrow">
							<f:button name="dropDown"/>
						</html:div>
					</html:div>
				</html:div>
				<html:div>
					<xsl:if test="$expanded/@value = 'true'">
						<html:div class="dropDownBox" top="{$chooseTop + 34}" left="310">
							<html:div class="dropDownBoxBackground"/>
							<xsl:copy-of select="$relationContent" />
							<xsl:for-each select="$relationContent/*">
								<xsl:variable name="value" select="./f:value/f:relationcontent/f:name/@value"/>
								<xsl:if test="$value != ''">
									<html:div class="kernelObject" top="{10 + (position() - 1) * 30}" left="15" style="background-color:#e09;">
										<f:binding url="bindings/addInfon.xml">
											<f:with-param name="relation" value-id="{./f:key/*/@id}"/>
											<f:with-param name="addPanel">
												<xsl:copy-of select="$addPanel"/>
											</f:with-param>
										</f:binding>
										<f:button name="select"/>
										<xsl:value-of select="$value"/>
									</html:div>
								</xsl:if>
							</xsl:for-each>
						</html:div>
					</xsl:if>
				</html:div>
				<html:div>
					<xsl:variable name="roleCount" select="count($selectedRelationContent/f:pseudo/f:role)" />
					<xsl:variable name="argCount" select="count($infonArgs/*)" />
					<xsl:if test="$roleCount &gt; 0 and $argCount &gt;= $roleCount">
						<html:div class="infonSubmitNewInfon" style="position: relative; left: 38%; bottom: -70%">
							<f:button name="submit" />
							<html:span class="infonSubmitButton">
								<html:div class="infonSubmitR"/>
								<html:div class="infonSubmitL"/>
							</html:span>
							<html:div style="position: absolute; line-height: 46px; left: 10px;">submit this infon</html:div>
						</html:div>
					</xsl:if>
				</html:div>
			</html:div>
		</html:div>
	</xsl:template>
	
	
	<f:function name="printParentSitContent">
		<f:param name="focus" />
		<f:derived name="parentSituation" from="focus">
			<f:get what="parentSituation" />
		</f:derived>
		
		<xsl:template>
			<html:div>
				<f:thunk url="printContent.xml">
					<f:with-param name="focus"><xsl:copy-of select="$parentSituation" /></f:with-param>
					<f:with-param name="style"><f:string value="inline" /></f:with-param>
				</f:thunk>
			</html:div>
		</xsl:template>
	</f:function>
</f:function>
