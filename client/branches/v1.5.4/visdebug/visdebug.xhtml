<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://www.filmsfolded.com/xsl/ui"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink">
<head>
  <title>FT Vis Debug</title>

	<script>
	var ROOTDIR = "../";
	</script>

	<script src="../json2.js" />
	<script src="../util.js" />
	
	<script src="../xml.js" />
	<script src="../kernel.js" />
	<script src="../queries.js" />
	<script src="../components.js" />
	<script src="../kernelcomponents.js" />
<!-->	<script src="../test qs/test4.js" /> </!-->
	<script src="../test qs/testsimple.js" />

	<script src="dojoPackage/dojo/dojo.js" djConfig="parseOnLoad:true, isDebug:true"/>

	<script src="containment.js"/>
	<script src="objects2xml.js"/>
	<script src="visdebug.js"/>

	<script type="text/javascript">
		dojo.require("dijit.form.Button");
		dojo.require("dijit.TitlePane");
		
		var qTestFunc = function(){
			root.input.add(5);
			return root;
		};
		
		
		window.addEventListener("load", function(){
			/*
			var params = {};
			params.initStyle = "recursive";
			params.testFunc = randomCorrespondence;
			params.svgDiv = "svgelements";
			params.recurseFuncName = "getObjects";
			params.containWords = ["Situation"];
			params.noLinkWords = ["Situation", "Objects"];
			params.typeShapesFile = "typeshapes.xml";
			vd1 = visDebug();
			vd1.init(params);
			*/
			
			/*
			var params2 = {};
			params2.initStyle = "recursive";
			params2.testFunc = qTestFunc;
			params2.svgDiv = "svgelements3";
			params2.recurseFuncName = "getInforms";
			params2.containWords = ["Situation"];
			params2.noLinkWords = ["Situation", "Objects"];
			params2.typeShapesFile = "typeshapes.xml";
			
			vd2 = visDebug();
			vd2.init(params2);
			*/
			
			/*
			vd3 = visDebug();

			var params3 = {};
			params3.initStyle = "array";
			params3.testFunc = scratchTest;
			params3.svgDiv = "svgelements";
			params3.containWords = ["Inputs","Outputs"];
			params3.noLinkWords = ["Inof", "Outof", "Outputs", "Inputs"];
			params3.typeShapesFile = "typeshapes.xml";
			vd3.init(params3);
			*/
			
			var visqtest = function(){
				var returnArray = [];
				forEach(globalQArray, function(qelement){
					if(qelement.getType() != "component"){
						returnArray.push(qelement);
					}
				});
				
				
				return returnArray;
			};
			
			vd4 = visDebug();

			var params4 = {};
			params4.initStyle = "array";
			params4.testFunc = visqtest;
			params4.svgDiv = "svgelements";
			params4.containWords = ["InputPins","OutputPins","inputPins","outputPins"];
			//params4.containedWords = ["inputPins","outputPins"];
			params4.noLinkWords = ["InputPins","OutputPins","inputPins","outputPins","State","Inputs","Applications"];
			params4.typeShapesFile = "typeshapes.xml";
			
			vd4.init(params4);
		}, false);
	</script>

	<link rel="stylesheet" href="visdebug.css" />

</head>
<body id="body" onload="">
		<svg:svg version="1.1" id="gradients">
			<svg:linearGradient id="gradient">
				<svg:stop class="yellow" offset="0%"/>
				<svg:stop class="green" offset="100%"/>
	    	</svg:linearGradient>
			<svg:linearGradient id="bluegradient">
				<svg:stop class="red" offset="0%"/>
				<svg:stop class="blue" offset="100%"/>
	    	</svg:linearGradient>
			<svg:linearGradient id="relationgradient">
				<svg:stop class="red" offset="0%"/>
				<svg:stop class="yellow" offset="100%"/>
	    	</svg:linearGradient>
			<svg:linearGradient id="graygradient">
				<svg:stop class="black" offset="0%"/>
				<svg:stop class="gray" offset="15%"/>
				<svg:stop class="gray" offset="85%"/>
				<svg:stop class="black" offset="100%"/>
	    	</svg:linearGradient>
		</svg:svg>

		<svg:svg version="1.1"
		    id="svgelements"
			viewBox="0 0 700 1000">
			<div id="sepdiv" />
		</svg:svg>
		
<!-->		
		<svg:svg version="1.1"
		    id="svgelements2"
		    preserveAspectRatio="xMidYMid slice" viewBox="0 0 700 700">
			<div id="sepdiv2" />
		</svg:svg>
		
		<svg:svg version="1.1"
		    id="svgelements3"
		    preserveAspectRatio="xMidYMid slice" viewBox="0 0 2500 600">
			<div id="sepdiv3" />
		</svg:svg>
</!-->		
<html:div style="display:none;" id="html_mainscreen"><f:thunk>
	<f:function url="test qs/testxml/printsituation.xml" />
	<f:with-param name="focus" value="predefined.realWorld" />
</f:thunk></html:div>

		<svg:svg version="1.1" id="svgkey"
		    preserveAspectRatio="xMidYMid slice">
			<svg:rect x="80" y="63" width="40" height="12" fill="url(#gradient)" />
			<svg:rect x="80" y="81" width="40" height="12" fill="url(#bluegradient)" />
			<svg:rect x="80" y="99" width="40" height="12" fill="url(#relationgradient)" />
			<svg:rect x="80" y="117" width="40" height="12" fill="url(#bluegradient)" opacity=".3"/>			
		</svg:svg>
				
		<div id="info" />
			
		<div id="key">
			Hints: <br/>Hold "r" to resize, "z" to zoom <br/>
			Key: <br/>
			Situations: <br/>
			Individuals: <br/>
			Rel/Rol/Inf: <br/>
			Ghosts: <br/>
		</div>
		<div id="inputdiv">
			<input onkeypress="return visDebug.submitenter(this,event);"/>
		</div>
</body>
</html>
